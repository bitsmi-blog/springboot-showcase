<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.bitsmi.springboot-showcase</groupId>
    <artifactId>springboot-showcase-parent</artifactId>
    <version>3.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<node.version>v20.12.2</node.version>

        <!-- DEPENDENCIES -->
        <commons-beanutils.version>1.10.0</commons-beanutils.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-io.version>2.18.0</commons-io.version>
        <instancio.version>5.0.1</instancio.version>
        <java-jwt.version>4.5.0</java-jwt.version>
        <lombok.version>1.18.36</lombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <postgresql.version>42.7.5</postgresql.version>
        <retrofit.version>2.11.0</retrofit.version>
        <testcontainers.version>1.20.4</testcontainers.version>
        <spring-boot.version>3.4.2</spring-boot.version>
        <spring-cloud.version>2024.0.0</spring-cloud.version>
        <springdoc.version>2.8.4</springdoc.version>
        <wiremock.version>3.11.0</wiremock.version>

        <!-- PLUGINS -->
        <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
        <frontend-maven-plugin.version>1.15.1</frontend-maven-plugin.version>
        <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
    </properties>

    <modules>
        <module>utils</module>

        <module>clients/fluent-client</module>
        <module>clients/openfeign</module>

        <module>sample-applications/common-modules</module>
        <module>sample-applications/kafka</module>
        <module>sample-applications/web-mvc</module>

        <module>spring-core/aop</module>
        <module>spring-core/cache</module>
        <module>spring-core/dependency-injection</module>
        <module>spring-core/validation</module>

        <module>spring-data-jpa/repository-extension</module>
		<module>spring-data-jpa/queries</module>

        <module>spring-mvc/api-versioning</module>

        <module>testing</module>

        <module>docs</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- SPRING -->
            <!-- Inherit Spring boot defaults -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- UTILS -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-binding.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>

            <!-- TEST -->
            <dependency>
                <groupId>org.instancio</groupId>
                <artifactId>instancio-junit</artifactId>
                <version>${instancio.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Use standalone artifact to not having conflicts between Wiremock's & Spring's Jetty -->
            <dependency>
                <groupId>org.wiremock</groupId>
                <artifactId>wiremock-standalone</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>add-integration-test-source</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/integration-test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-integration-test-resource</id>
                            <phase>generate-test-resources</phase>
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/integration-test/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <dependency>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok-mapstruct-binding</artifactId>
                                <version>${lombok-mapstruct-binding.version}</version>
                            </dependency>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <!-- Run mvn jacoco:report to generate HTML report on target/site folder -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <!-- Unit tests -->
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${project.reporting.outputDirectory}/jacoco/unit-test/jacoco.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.reporting.outputDirectory}/jacoco/unit-test/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco/unit-test</outputDirectory>
                            </configuration>
                        </execution>
                        <!-- Integration tests -->
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <destFile>${project.reporting.outputDirectory}/jacoco/integration-test/jacoco.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>report-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.reporting.outputDirectory}/jacoco/integration-test/jacoco.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco/integration-test</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>merge-executions</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${project.reporting.outputDirectory}/jacoco/unit-test</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                    <fileSet>
                                        <directory>${project.reporting.outputDirectory}/jacoco/integration-test</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${project.reporting.outputDirectory}/jacoco/aggregate.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>create-aggregate-report</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.reporting.outputDirectory}/jacoco/aggregate.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default-test</id>
                            <configuration>
                                <excludedGroups>IntegrationTest,ManualTest</excludedGroups>
                            </configuration>
                        </execution>
                        <!-- Additional execution for integration tests -->
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <phase>integration-test</phase>
                            <configuration>
                                <groups>IntegrationTest</groups>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>

                <!-- DOCS -->
                <!-- Disable default docs generation through site plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                        <skipDeploy>true</skipDeploy>
                    </configuration>
                </plugin>
                <plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>${frontend-maven-plugin.version}</version>
					<executions>
						<execution>
                            <id>install-node-and-npm</id>
							<goals>
								<goal>install-node-and-npm</goal>
							</goals>
							<phase>initialize</phase>
						</execution>
						<execution>
                            <id>npm-install-antora</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<phase>initialize</phase>
							<configuration>
								<arguments>install</arguments>
							</configuration>
						</execution>											
					</executions>
					<configuration>
						<nodeVersion>${node.version}</nodeVersion>
					</configuration>
				</plugin>			
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<executions>
						<execution>
                            <id>antora-build</id>
							<goals>
								<goal>exec</goal>
							</goals>
							<phase>site</phase>
							<configuration>							
								<executable>${project.basedir}/node/node</executable>
								<executable>${project.basedir}/node/${npx.executable}</executable>
								<arguments>
									<argument>antora</argument>
									<argument>antora-playbook.yml</argument>
									<argument>--to-dir=target/generated-docs</argument>
                                    <argument>--stacktrace</argument>
								</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Delete docs folder prior to copy the re-generated files -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>clean-docs</id>
                            <phase>site</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <target>
                                    <delete includeEmptyDirs="true">
                                        <fileset dir="${basedir}/site"/>
                                    </delete>
                                </target>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy-docs</id>
                            <phase>site</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/site</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${basedir}/target/generated-docs</directory>
                                        <filtering>false</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
		</pluginManagement>
	</build>

    <profiles>
        <profile>
            <id>PRO</id>
            <properties>
                <application.profile>PRO</application.profile>
            </properties>
        </profile>
        <profile>
            <id>DEV</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <application.profile>DEV</application.profile>
            </properties>
        </profile>
		<profile>
        <id>windows-profile</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <npx.executable>npx.cmd</npx.executable>
            </properties>
        </profile>
        <profile>
            <id>non-windows-profile</id>
            <activation>
                <os>
                    <family>!windows</family>
                </os>
            </activation>
            <properties>
                <npx.executable>npx</npx.executable>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
</project>

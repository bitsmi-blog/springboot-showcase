version: "3"

name: springboot-showcase-main

networks:
  application-network:
    external: false

services:
  application:
    image: springboot-showcase-main:${project.version}
    container_name: springboot-showcase-main
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - application-network
    restart: always
    depends_on:
      db:
        condition: service_healthy
        restart: true
      broker:
        condition: service_healthy
        restart: true
  db:
    image: postgres:16.0-alpine
    container_name: springboot-showcase_db
    ports:
      - 5432:5432
    env_file:
      - .env
    networks:
      - application-network
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/initdb/:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${APP_DATABASE_USER} -d app_db'"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: always
  broker:
    # Kafka image that doesn't need zookeeper (KRaft mode)
    image: confluentinc/confluent-local:latest
    hostname: broker
    container_name: broker
    ports:
      - "8082:8082"
      - "9092:9092"
    networks:
      - application-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
    restart: always